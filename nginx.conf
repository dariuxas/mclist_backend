server {
    listen 80;
    server_name api.pax.lt;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name api.pax.lt;

    # SSL Configuration (certbot will manage these)
    ssl_certificate /etc/letsencrypt/live/api.pax.lt/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.pax.lt/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Performance optimizations
    ssl_session_cache shared:SSL:10m;
    ssl_buffer_size 8k;
    
    # Enable GZIP compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Main API location
    location / {

        # CRITICAL: Remove any client-provided X-Forwarded-For header
        proxy_set_header X-Forwarded-For "";
        
        # Set the real client IP (prevents IP spoofing)
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Standard proxy headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Proxy to your API
        proxy_pass http://127.0.0.1:8000;
        
        # Performance settings
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
        proxy_buffering off;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer sizes for better performance
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }


    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://127.0.0.1:8000/health;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Block access to sensitive files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    location ~ \.(env|conf|config)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Client max body size (for file uploads if needed)
    client_max_body_size 10M;
    
    # Keep alive for better performance
    keepalive_timeout 65;
    keepalive_requests 100;

    # Logging
    access_log /var/log/nginx/api.pax.lt.access.log;
    error_log /var/log/nginx/api.pax.lt.error.log warn;
}